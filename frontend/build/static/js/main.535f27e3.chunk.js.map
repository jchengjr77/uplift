{"version":3,"sources":["components/responsivebutton.js","components/loginmodal.js","components/signupmodal.js","components/topbar.js","pages/home.js","pages/profile.js","App.js","serviceWorker.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","ResponsiveButton","props","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","Button","outline","size","onClick","block","className","text","LoginModal","email","setEmail","password","setPassword","enteredInvalid","setEnteredInvalid","attemptLogin","authenticate","close","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","style","display","color","TextField","autoFocus","margin","label","type","fullWidth","onChange","e","target","value","onKeyPress","ev","key","preventDefault","p","DialogActions","flexDirection","alignItems","justifyContent","paddingBottom","signup","SignupModal","invalidEmail","setInvalidEmail","name","setName","confirm","setConfirm","canSignup","length","goodPass","attemptSignup","disabled","login","TopBar","url","to","auth","setAuth","setLogin","setSignup","textDecoration","Home","inspiration","getInspiration","submitted","setSubmitted","input","setInput","submit","id","placeholder","event","Fade","in","timeout","theme","createMuiTheme","shadows","useStyles","makeStyles","root","maxWidth","backgroundColor","palette","background","paper","borderColor","borderWidth","borderStyle","list","Profile","friendsList","ret","forEach","friend","push","data","sort","friendsFromUid","Object","keys","uid_0","friends","classes","ThemeProvider","Paper","maxHeight","overflow","boxShadow","List","map","idx","ListItem","ListItemText","primary","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.535f27e3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { Button } from \"reactstrap\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction ResponsiveButton(props) {\n  const { height, width } = useWindowDimensions();\n  return (\n    <Button\n      outline\n      size={height * 0.75 < width ? \"lg\" : \"sm\"}\n      onClick={props.onClick}\n      block={height * 0.75 < width}\n      className={props.className}\n    >\n      {props.text}\n    </Button>\n  );\n}\n\nexport default ResponsiveButton;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n  Button\n} from \"@material-ui/core\";\n\nfunction LoginModal(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [enteredInvalid, setEnteredInvalid] = useState(false);\n\n  function attemptLogin() {\n    setEnteredInvalid(false);\n    setEmail(\"\");\n    setPassword(\"\");\n    props.authenticate();\n    props.close();\n  }\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => {\n        setEmail(\"\");\n        setPassword(\"\");\n        setEnteredInvalid(false);\n        props.close();\n      }}\n    >\n      <DialogTitle>Login</DialogTitle>\n      <DialogContent>\n        <DialogContentText\n          style={{\n            display: enteredInvalid ? \"inline\" : \"none\",\n            color: \"#ED3434\"\n          }}\n        >\n          Invalid email or password\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Email\"\n          type=\"email\"\n          fullWidth\n          onChange={e => {\n            setEmail(e.target.value);\n          }}\n          onKeyPress={ev => {\n            if (ev.key === \"Enter\") {\n              attemptLogin();\n              ev.preventDefault();\n            }\n          }}\n          value={email}\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Password\"\n          type=\"password\"\n          fullWidth\n          onChange={p => {\n            setPassword(p.target.value);\n          }}\n          onKeyPress={ev => {\n            if (ev.key === \"Enter\") {\n              attemptLogin();\n              ev.preventDefault();\n            }\n          }}\n          value={password}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            setEmail(\"\");\n            setPassword(\"\");\n            setEnteredInvalid(false);\n            props.close();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button onClick={attemptLogin}>Login</Button>\n      </DialogActions>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          paddingBottom: \"2vh\"\n        }}\n      >\n        <div>Don't have an account?</div>\n        <button className=\"LinkText\" onClick={props.signup}>Signup</button>\n      </div>\n    </Dialog>\n  );\n}\n\nexport default LoginModal;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n  Button\n} from \"@material-ui/core\";\n\nfunction SignupModal(props) {\n  const [email, setEmail] = useState(\"\");\n  const [invalidEmail, setInvalidEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const canSignup =\n    email !== \"\" &&\n    password === confirm &&\n    password.length >= 8 &&\n    confirm.length >= 8 &&\n    name !== \"\";\n  const goodPass =\n    password === confirm && password.length >= 8 && confirm.length >= 8;\n\n  function attemptSignup() {\n    setEmail(\"\");\n    setName(\"\");\n    setPassword(\"\");\n    setConfirm(\"\");\n    setInvalidEmail(false);\n    props.authenticate();\n    props.close();\n  }\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => {\n        setEmail(\"\");\n        setName(\"\");\n        setPassword(\"\");\n        setConfirm(\"\");\n        setInvalidEmail(false);\n        props.close();\n      }}\n    >\n      <DialogTitle>Sign Up</DialogTitle>\n      <DialogContent>\n        <DialogContentText\n          style={{ display: canSignup ? \"none\" : \"inline\", color: \"#ED3434\" }}\n        >\n          All fields are required.{\" \"}\n        </DialogContentText>\n        <DialogContentText\n          style={{ display: goodPass ? \"none\" : \"inline\", color: \"#ED3434\" }}\n        >\n          Passwords must match and be at least 8 characters.\n        </DialogContentText>\n        <DialogContentText\n          style={{ display: !goodPass ? \"none\" : \"inline\", color: \"#1D800E\" }}\n        >\n          Password is valid.\n        </DialogContentText>\n        <br />\n        <DialogContentText\n          style={{\n            display: !invalidEmail ? \"none\" : \"inline\",\n            color: \"#ED3434\"\n          }}\n        >\n          Invalid Email\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Name\"\n          type=\"name\"\n          fullWidth\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          onKeyPress={ev => {\n            if (ev.key === \"Enter\" && canSignup) {\n              attemptSignup();\n              ev.preventDefault();\n            }\n          }}\n          value={name}\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Email\"\n          type=\"email\"\n          fullWidth\n          onChange={e => {\n            setEmail(e.target.value);\n          }}\n          onKeyPress={ev => {\n            if (ev.key === \"Enter\" && canSignup) {\n              attemptSignup();\n              ev.preventDefault();\n            }\n          }}\n          value={email}\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Password\"\n          type=\"password\"\n          fullWidth\n          onChange={p => {\n            setPassword(p.target.value);\n          }}\n          onKeyPress={ev => {\n            if (ev.key === \"Enter\" && canSignup) {\n              attemptSignup();\n              ev.preventDefault();\n            }\n          }}\n          value={password}\n        />\n        <TextField\n          margin=\"dense\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          fullWidth\n          onChange={p => {\n            setConfirm(p.target.value);\n          }}\n          onKeyPress={ev => {\n            if (ev.key === \"Enter\" && canSignup) {\n              attemptSignup();\n              ev.preventDefault();\n            }\n          }}\n          value={confirm}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            setEmail(\"\");\n            setName(\"\");\n            setPassword(\"\");\n            setConfirm(\"\");\n            setInvalidEmail(false);\n            props.close();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button onClick={attemptSignup} disabled={!canSignup}>\n          Sign Up\n        </Button>\n      </DialogActions>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          paddingBottom: \"2vh\"\n        }}\n      >\n        <div>Already have an account?</div>\n        <button className=\"LinkText\" onClick={props.login}>Login</button>\n      </div>\n    </Dialog>\n  );\n}\n\nexport default SignupModal;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ResponsiveButton from \"./responsivebutton\";\nimport LoginModal from \"./loginmodal\";\nimport SignupModal from \"./signupmodal\";\nimport \"../App.css\";\n\nfunction TopBar(props) {\n  const url = props.to === \"profile\" ? \"/profile\" : \"/\";\n  const [auth, setAuth] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [signup, setSignup] = useState(false);\n  return (\n    <div className=\"TopBar\">\n      <div className=\"LogoContainer\">\n        <div className=\"LeftLogoText\">up</div>\n        <div className=\"RightLogoText\">lift</div>\n      </div>\n      <LoginModal\n        open={login}\n        close={() => setLogin(false)}\n        authenticate={() => setAuth(true)}\n        signup={() => {\n          setLogin(false);\n          setSignup(true);\n        }}\n      />\n      <SignupModal\n        open={signup}\n        close={() => setSignup(false)}\n        login={() => {\n          setSignup(false);\n          setLogin(true);\n        }}\n        authenticate={() => setAuth(true)}\n      />\n      <div className=\"TRButtonContainer\">\n        {auth ? (\n          <Link to={url} style={{ textDecoration: \"none\" }}>\n            <ResponsiveButton text={props.to} className=\"TopRightButton\" />\n          </Link>\n        ) : (\n          <ResponsiveButton\n            text=\"login\"\n            className=\"TopRightButton\"\n            onClick={() => {\n              setLogin(true);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TopBar;\n","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport TopBar from \"../components/topbar\";\nimport { TextField, Fade } from \"@material-ui/core\";\nimport ResponsiveButton from \"../components/responsivebutton\";\n\nfunction Home(props) {\n  const [inspiration, getInspiration] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const friendText = \"I loved your cooking at the barbeque\";\n  const selfText = \"today, i love my...\";\n  const elseText = \"today, i love Anna's...\";\n\n  function submit() {\n    setSubmitted(!submitted);\n    setInput(\"\");\n  }\n  return (\n    <div className=\"PageContainer\">\n      <TopBar to={props.to} />\n      <div className=\"HomePageContainer\">\n        {\" \"}\n        <TextField\n          id=\"standard-basic\"\n          fullWidth\n          placeholder={submitted ? selfText : elseText}\n          value={input}\n          onChange={event => setInput(event.target.value)}\n          onKeyPress={e => {\n            if (e.key === \"Enter\") {\n              submit();\n            }\n          }}\n        />\n        <div className=\"InputButtons\">\n          <div className=\"InputLeftButton\">\n            <ResponsiveButton\n              text=\"get inspiration\"\n              className=\"InspirationButton\"\n              onClick={() => getInspiration(!inspiration)}\n            />\n          </div>\n          <div className=\"InputRightButton\">\n            <ResponsiveButton\n              text=\"submit\"\n              className=\"TopRightButton\"\n              onClick={submit}\n            />\n          </div>\n        </div>\n      </div>\n      <Fade in={inspiration} {...(inspiration ? { timeout: 1000 } : {})}>\n        <div className=\"HiddenText\">\"{friendText}\"</div>\n      </Fade>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../App.css\";\nimport TopBar from \"../components/topbar\";\nimport { Button } from \"reactstrap\";\nimport { List, ListItem, ListItemText, Paper } from \"@material-ui/core\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport data from \"../data/data.json\";\n\nconst theme = createMuiTheme({\n  shadows: [\"none\"],\n});\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    borderColor: \"#a46ddb !important\",\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    shadows: [\"none\"],\n  },\n  list: {\n    borderColor: \"#a46ddb !important\",\n    borderWidth: 1,\n  },\n}));\n\nfunction friendsFromUid(friendsList) {\n  let ret = [];\n  friendsList.forEach((friend) => {\n    ret.push(data[friend].name);\n  });\n  return ret.sort();\n}\n\nfunction Profile(props) {\n  const friendsList_Uid = Object.keys(data.uid_0.friends);\n  let friendsList = friendsFromUid(friendsList_Uid);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme = {theme}>\n      <div className=\"PageContainer\" theme={theme}>\n        <TopBar to={props.to} />\n        <div className=\"ProfileContainer\">\n          <div className=\"NameContainer\">name: {data.uid_0.name}</div>\n          <div className=\"EmailContainer\">email: {data.uid_0.email}</div>\n          <div className=\"FriendsText\">friends:</div>\n          <div className={classes.root}>\n            <Paper style={{ maxHeight: 200, overflow: \"auto\" }} boxShadow={0}>\n              <div className=\"FriendsContainer\">\n                <List className={classes.list}>\n                  {friendsList.map((friend, idx) => {\n                    return (\n                      <ListItem key={idx}>\n                        <ListItemText primary={friend} />\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              </div>\n            </Paper>\n          </div>\n          <div className=\"AMButtonContainer\">\n            <Button className=\"AllMessagesButton\">all messages</Button>\n          </div>\n          <div className=\"LogoutButtonContainer\">\n            <Button className=\"LogoutButton\">log out</Button>\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport Profile from \"./pages/profile\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home to=\"profile\" />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile to=\"home\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}